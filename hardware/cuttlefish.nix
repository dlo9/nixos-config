# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "ehci_pci" "ahci" "mpt3sas" "isci" "nvme" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    {
      device = "fast/nixos/root";
      fsType = "zfs";
    };

  fileSystems."/root" =
    {
      device = "fast/home/root";
      fsType = "zfs";
    };

  fileSystems."/home/david" =
    {
      device = "fast/home/david";
      fsType = "zfs";
    };

  fileSystems."/zfs" =
    {
      device = "fast/zfs";
      fsType = "zfs";
    };

  fileSystems."/boot/efi0" =
    {
      device = "/dev/disk/by-uuid/D10A-E7FF";
      fsType = "vfat";
    };

  fileSystems."/boot/efi1" =
    {
      device = "/dev/disk/by-uuid/D007-7D72";
      fsType = "vfat";
    };

  fileSystems."/boot/efi2" =
    {
      device = "/dev/disk/by-uuid/388C-755D";
      fsType = "vfat";
    };

  fileSystems."/slow/backup/david/archbook-duplicacy" =
    {
      device = "slow/backup/david/archbook-duplicacy";
      fsType = "zfs";
    };

  fileSystems."/slow/backup/david/mail" =
    {
      device = "slow/backup/david/mail";
      fsType = "zfs";
    };

  fileSystems."/slow/media/video/movies" =
    {
      device = "slow/media/video/movies";
      fsType = "zfs";
    };

  fileSystems."/slow/media/audio" =
    {
      device = "slow/media/audio";
      fsType = "zfs";
    };

  fileSystems."/slow/backup/david/motog5" =
    {
      device = "slow/backup/david/motog5";
      fsType = "zfs";
    };

  fileSystems."/slow/media/ebooks" =
    {
      device = "slow/media/ebooks";
      fsType = "zfs";
    };

  fileSystems."/slow/media/comics" =
    {
      device = "slow/media/comics";
      fsType = "zfs";
    };

  fileSystems."/slow/media/video/transcode" =
    {
      device = "slow/media/video/transcode";
      fsType = "zfs";
    };

  fileSystems."/slow/media/video/personal" =
    {
      device = "slow/media/video/personal";
      fsType = "zfs";
    };

  fileSystems."/slow/backup/chelsea/windows-laptop" =
    {
      device = "slow/backup/chelsea/windows-laptop";
      fsType = "zfs";
    };

  fileSystems."/slow/media/video/tv" =
    {
      device = "slow/media/video/tv";
      fsType = "zfs";
    };

  fileSystems."/slow/recover/backup/david/nebula-windows" =
    {
      device = "slow/backup/david/nebula-windows";
      fsType = "zfs";
    };

  fileSystems."/slow/media/video/isos" =
    {
      device = "slow/media/video/isos";
      fsType = "zfs";
    };

  fileSystems."/slow/old/games" =
    {
      device = "slow/games";
      fsType = "zfs";
    };

  fileSystems."/slow/documents" =
    {
      device = "slow/documents";
      fsType = "zfs";
    };

  fileSystems."/slow/media/photos" =
    {
      device = "slow/media/photos";
      fsType = "zfs";
    };

  fileSystems."/var/lib/containerd/io.containerd.snapshotter.v1.overlayfs" =
    {
      device = "/dev/disk/by-uuid/bc8b3a3d-a573-4996-bc04-2a4ff209aa2f";
      fsType = "ext4";
    };

  swapDevices =
    [{ device = "/dev/disk/by-uuid/2bab50cb-c97d-4e2f-8ffc-0d957b1e7cbf"; }
      { device = "/dev/disk/by-uuid/cfabdcdc-e671-43ee-83d9-c487e5376454"; }];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.docker0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp5s0f0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp5s0f1.useDHCP = lib.mkDefault true;
  # networking.interfaces.flannel.1.useDHCP = lib.mkDefault true;
  # networking.interfaces.mynet.useDHCP = lib.mkDefault true;
  # networking.interfaces.tailscale0.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth027d79c7.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth0642e249.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth08ebf1d6.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth1928b1be.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth1c60a4af.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth1d143cbf.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth296d0963.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth3195c9ab.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth3a77d2fc.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth40abc5f8.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth41ea6b35.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth481391ad.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth4ce44f7b.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth56376906.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth58253fd0.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth5839b4d4.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth59b2eca2.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth5db42a66.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth625d3912.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth64d3a173.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth68601d24.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth69fea152.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth6fbde92a.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth7c3e39a7.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth8f61b11f.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth9639127d.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth9954f404.useDHCP = lib.mkDefault true;
  # networking.interfaces.vetha075fb8e.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethae6e8d58.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethb09abb74.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethb0c7fee3.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethb5a5d131.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethb7c54764.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethba1b5096.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethba604932.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethbc928cb8.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethbdd307a3.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethc0823daa.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethc965c436.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethcccf597b.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethcf086fd0.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethd0faea0a.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethd417acaa.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethd7ea0b7a.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethd96d4678.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethdbc93fac.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethdbdd3f95.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethdc70eccc.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethe5173781.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethe61f445e.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethf624e189.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethfc2f6278.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethfe099cc9.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethfe546da7.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethfef2394e.useDHCP = lib.mkDefault true;

  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
