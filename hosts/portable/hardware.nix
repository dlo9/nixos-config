# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "usb_storage" "sd_mod" "rtsx_pci_sdmmc" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  #swapDevices =
  #  [{ device = "/dev/disk/by-uuid/505a2e74-e6a7-44f6-b835-f1bd904acb62"; }
  #    { device = "/dev/disk/by-uuid/14d5f9e4-05a0-48a3-a27a-b76399f53e8a"; }];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  powerManagement.cpuFreqGovernor = lib.mkDefault "ondemand";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  fileSystems."/" =
    {
      device = "upool/nixos/root";
      fsType = "zfs";
    };

  fileSystems."/boot/efi" =
    {
      device = "/dev/disk/by-uuid/4FE4-F3C5";
      fsType = "vfat";
    };

  fileSystems."/home/david" =
    {
      device = "upool/home/david";
      fsType = "zfs";
    };

  fileSystems."/nix" =
    {
      device = "upool/nixos/nix";
      fsType = "zfs";
    };

  fileSystems."/root" =
    {
      device = "upool/home/root";
      fsType = "zfs";
    };

  fileSystems."/upool" =
    {
      device = "upool";
      fsType = "zfs";
    };
}
